#!/bin/bash

# Exit on error
set -e

# Remove build directory
rm -rf build

# Create build directory
mkdir -p build

# Create JuceHeader.h based on modules needed
cat > include/JuceHeader.h << EOF
#pragma once

// This file is automatically generated by rebuild.sh

#include <juce_audio_basics/juce_audio_basics.h>
#include <juce_audio_devices/juce_audio_devices.h>
#include <juce_audio_formats/juce_audio_formats.h>
#include <juce_audio_processors/juce_audio_processors.h>
#include <juce_audio_utils/juce_audio_utils.h>
#include <juce_core/juce_core.h>
#include <juce_data_structures/juce_data_structures.h>
#include <juce_dsp/juce_dsp.h>
#include <juce_events/juce_events.h>
#include <juce_graphics/juce_graphics.h>
#include <juce_gui_basics/juce_gui_basics.h>
#include <juce_gui_extra/juce_gui_extra.h>

// Use JUCE namespace by default
using namespace juce;
EOF

# Ensure all GUI header directories exist
mkdir -p include/undergroundBeats/gui/panels

# Create symlinks for JuceHeader.h in various directories
ln -sf ../../JuceHeader.h include/undergroundBeats/JuceHeader.h
ln -sf ../../JuceHeader.h include/undergroundBeats/gui/JuceHeader.h
ln -sf ../../../JuceHeader.h include/undergroundBeats/gui/panels/JuceHeader.h

# Configure and build
cd build
cmake -DCMAKE_BUILD_TYPE=Debug ..
cmake --build .

echo "Build complete!" 